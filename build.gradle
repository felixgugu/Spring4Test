


//JAVA SETTING
apply plugin: 'java'
apply plugin: 'eclipse'
//apply plugin: 'idea'
//apply plugin: 'project-report'
apply plugin: 'eclipse-wtp'
apply plugin: 'war'


//打包名稱
def projectName = "${project.name}"

//預設工作
defaultTasks('work')

//jar帶的版號
version = '1.0'


targetCompatibility = 1.7
sourceCompatibility = 1.7
compileJava.options.encoding = 'UTF-8'
compileJava {
    options.fork = true
    options.debug = true
    options.debugOptions.setDebugLevel("lines,vars,source")
}

jar {
    include('**/*.class')
    includeEmptyDirs = false
}

eclipse {
    jdt {
        sourceCompatibility = 1.7
        targetCompatibility = 1.7
    }
    project {
        buildCommand 'org.eclipse.jdt.core.javabuilder'
        buildCommand 'org.eclipse.wst.validation.validationbuilder'
        
        file {
            withXml { xmlProvider ->
                Node project = xmlProvider.asNode()
                Node filter = project.appendNode('filteredResources').appendNode('filter')
                filter.appendNode('id', 2889034) 
                filter.appendNode('name', 'build filter')
                filter.appendNode('type', 10)
                
                Node matcher = filter.appendNode('matcher')
                matcher.appendNode('id', 'org.eclipse.ui.ide.multiFilter')
                matcher.appendNode('arguments', '1.0-name-matches-false-false-build')
            }
        }            
    }
    classpath {
       downloadSources=true
    }    
}


repositories {
    mavenCentral artifactUrls: ["http://repo1.maven.org/maven2", "http://repo.spring.io/snapshot"]
}

//jar version
def springframework_ver='4.2.2.RELEASE'
dependencies {

    //apache common
    //compile 'commons-codec:commons-codec:1.9'
    //compile 'commons-dbcp:commons-dbcp:1.4'
    //compile 'commons-fileupload:commons-fileupload:1.3.1'
    //compile 'commons-io:commons-io:2.4'
    compile 'commons-logging:commons-logging-api:1.1'
    //compile 'commons-validator:commons-validator:1.4.0'
    //compile 'org.apache.commons:commons-digester3:3.2'
    //compile 'commons-lang:commons-lang:2.6'
    //compile 'org.apache.commons:commons-collections4:4.0'//跟velocity:1.7打架package不合
    //compile 'org.apache.commons:commons-lang3:3.2.1'
    //compile 'commons-collections:commons-collections:2.1.1'
    //compile 'commons-net:commons-net:3.3'


    //jsp
    compile 'jstl:jstl:1.2'
    compile 'javax.servlet:javax.servlet-api:3.1.0'
    //compile 'org.apache.tiles:tiles-api:3.0.4'
    //compile 'org.apache.tiles:tiles-core:3.0.4'
    //compile 'org.apache.tiles:tiles-jsp:3.0.4'
    //compile 'org.apache.tiles:tiles-servlet:3.0.4'
    //compile 'org.apache.tiles:tiles-template:3.0.4'

    //TOOLS
    //compile ('net.sourceforge.jexcelapi:jxl:2.6.12')//{exclude group: '*'}
    //compile ('org.apache.velocity:velocity:1.7')
    //compile ('org.apache.velocity:velocity-tools:2.0')//{exclude group: '*'}
    //compile ('org.jmesa:jmesa:3.0.4')//{exclude group: '*'}
    //compile 'org.json:json:20140107'
    //compile ('org.quartz-scheduler:quartz:1.8.4')//{exclude group: '*'}

    //compile ('net.sf.jasperreports:jasperreports:5.6.0'){exclude group: 'org.olap4j'}
    //compile ('com.lowagie:itext:2.1.7')//{exclude group: '*'}

    //compile 'com.google.code.gson:gson:2.2.3'
    //compile 'javax.mail:mail:1.4.7'
    //compile 'javax.validation:validation-api:1.1.0.Final'
    //compile 'net.lingala.zip4j:zip4j:1.3.2'
    

    //log
    compile 'org.slf4j:jcl-over-slf4j:1.7.6'
    compile 'org.slf4j:slf4j-api:1.7.6'
    compile 'org.slf4j:slf4j-ext:1.7.6'
    compile 'ch.qos.logback:logback-classic:1.1.2'
    //compile 'log4j:log4j:1.2.17'
    //compile 'org.slf4j:slf4j-log4j12:1.7.6'

    //hibernate
    //compile 'com.jolbox:bonecp:0.8.0.RELEASE'
    //compile 'mysql:mysql-connector-java:5.1.29'
    //compile 'org.hibernate:hibernate-core:3.6.10.Final'
    //compile 'org.hibernate:hibernate-validator:5.1.3.Final'
    //compile 'org.javassist:javassist:3.19.0-GA'

    //springframework.security
    //compile 'org.springframework.security:spring-security-web:3.2.5.RELEASE'
    //compile 'org.springframework.security:spring-security-core:3.2.5.RELEASE'
    //compile 'org.springframework.security:spring-security-config:3.2.5.RELEASE'

    //springframework
    compile "org.springframework:spring-aop:${springframework_ver}"
    compile "org.springframework:spring-aspects:${springframework_ver}"
    compile "org.springframework:spring-beans:${springframework_ver}"
    compile "org.springframework:spring-context:${springframework_ver}"
    compile "org.springframework:spring-context-support:${springframework_ver}"
    compile "org.springframework:spring-core:${springframework_ver}"
    //compile "org.springframework:spring-expression:${springframework_ver}"
    //compile "org.springframework:spring-instrument:${springframework_ver}"
    //compile "org.springframework:spring-instrument-tomcat:${springframework_ver}"
    compile "org.springframework:spring-jdbc:${springframework_ver}"
    //compile "org.springframework:spring-jms:${springframework_ver}"
    //compile "org.springframework:spring-messaging:${springframework_ver}"
    compile "org.springframework:spring-orm:${springframework_ver}"
    compile "org.springframework:spring-oxm:${springframework_ver}"
    compile "org.springframework:spring-test:${springframework_ver}"
    compile "org.springframework:spring-web:${springframework_ver}"
    compile "org.springframework:spring-webmvc:${springframework_ver}"
    //compile "org.springframework:spring-webmvc-portlet:${springframework_ver}"
    //compile "org.springframework:spring-websocket:${springframework_ver}"

    //spring mvc REST-Based JSON Services
    //compile 'com.fasterxml.jackson:jackson-parent:2.4'
    //compile 'com.fasterxml.jackson.core:jackson-core:2.4.1.1'
    //compile 'com.fasterxml.jackson.core:jackson-databind:2.4.1.1'
   
    //compile 'org.apache.ant:ant:1.9.3'
    
    testCompile 'junit:junit:4.11'
    //testCompile ('org.hibernate:hibernate-tools:4.0.0-CR1')//{exclude group: '*'}
}



/**
 * Default Task
 */
task work(dependsOn:jar) << {


    /*整理目錄*/
	def webDir="build/disk/${projectName}"
    delete webDir
    delete webDir+"/${projectName}.war"

    def libDir="build/disk/${projectName}/WEB-INF/lib"
    def classesDir="build/disk/${projectName}/WEB-INF/classes"

    mkdir webDir
    mkdir libDir
    mkdir classesDir

	/*從 web 複製必要的東東*/
    for(File file : sourceSets.main.resources.srcDirs){
        copy {
           from file.getPath()
           into classesDir
        }
    }
    
	copy {
	   from webAppDir
	   into webDir
	}

   
	copy {
	   from configurations.compile.files
       from project.libsDir
	   into libDir
	}    

    //壓成war檔 
    task('createWar',type: Zip) {
    	destinationDir new File('build/disk')
    	archiveName "${projectName}.war"
        from "build/disk/${projectName}"
        into ''
    }.execute()


}



task "create-dirs" << {
   sourceSets*.java.srcDirs*.each { it.mkdirs() }
   sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

task "test2" << {

print eclipse.project.file.withXml

}


